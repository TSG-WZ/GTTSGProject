
@{
    Layout = null;
}
@using DTTSG_Model
@model StuNotifyInfo

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>图书操作</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    @Styles.Render("~/List_Css")
    <style>
        body {
            background-color: #ffffff;
        }

        .textareas {
            height: 155px !important;
        }
    </style>
</head>
<body>
    <div class="layui-form layuimini-form">
        <form class="layui-form" id="TempForm">
            @Html.HiddenFor(m => m.SNotifyID)

            <div class="layui-form-item">
                <label class="layui-form-label required">私信类型</label>
                <div class="layui-input-block">
                    @Html.DropDownListFor(m => m.SNotifyTID, ViewBag.snoticeTypeList as List<SelectListItem>, new { @class = "layui-input", @autocomplete = "off" })
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">私信学生</label>
                <div class="layui-input-block">
                    @Html.TextBoxFor(m => m.Sid, new { @placeholder = "学生学号", @class = "layui-input", @autocomplete = "off" })
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">通知标题</label>
                <div class="layui-input-block">
                    @Html.TextBoxFor(m => m.SNotifyTitle, new { @placeholder = "通知标题", @class = "layui-input", @autocomplete = "off" })
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">通知内容</label>
                <div class="layui-input-block">
                    @Html.TextAreaFor(m => m.SNotifyContent, new { @class = "layui-input textareas", @autocomplete = "off" })
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">通知时间</label>
                <div class="layui-input-block">
                    @{
                        if (Model.SNotifyTime.ToLongDateString() == "0001年1月1日")
                        {
                            @Html.TextBoxFor(m => m.SNotifyTime, "2012-01-01", new { @placeholder = "yyyy-MM-dd", @class = "layui-input", @autocomplete = "off" })
                        }
                        else
                        {
                            @Html.TextBoxFor(m => m.SNotifyTime, new { @placeholder = "yyyy-MM-dd", @class = "layui-input", @autocomplete = "off", Value = String.Format("{0:yyyy-MM-dd}", Model.SNotifyTime) })
                        }
                    }
                </div>
            </div>

            <div class="layui-form-item">
                <div class="layui-input-block">
                    <button class="layui-btn layui-btn-normal" lay-submit lay-filter="saveBtn">确认保存</button>
                </div>
            </div>
        </form>
    </div>
    @Scripts.Render("~/List_Js", "~/Notice_Js")
    <script>
        layui.use(['form','laydate'], function () {
            var form = layui.form,
                layer = layui.layer,
                laydate = layui.laydate,
                $ = layui.$;

            //日期
            laydate.render({
                elem: '#SNotifyTime'
            });

            //监听提交
            form.on('submit(saveBtn)', function (data) {
                $.ajax({
                    url: '@Url.Action("PrivateNoteSave", "Notice")',
                    data: $("#TempForm").serialize(),
                    dataType: "json",
                    type: "post",
                    //执行成功返回(循环值,重新渲染分页,转换静态表格)
                    success: function (data) {
                        //关闭子弹出页面
                        var iframeIndex = parent.layer.getFrameIndex(window.name);  //获取父窗体值
                        layer.msg(data.Msg, {
                            time: 1000 },
                            function (index) {
                            //添加成功弹出
                            parent.layer.close(iframeIndex);//关闭父窗体
                            layer.close(index); //关闭弹窗
                            parent.location.reload();
                        });
                    },
                    error: function (data) {
                        layer.alert(data.Msg, { icon: 2 });
                    }
                }); //ajax结束

                return false;
            });

        });
    </script>
</body>
</html>