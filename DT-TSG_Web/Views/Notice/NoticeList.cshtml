
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>公告列表</title>
    @Styles.Render("~/BookList_Css")
    <style>
        .layui-btn:not(.layui-btn-lg ):not(.layui-btn-sm):not(.layui-btn-xs) {
            height: 34px;
            line-height: 34px;
            padding: 0 8px;
        }
    </style>
</head>
<body>
    <fieldset class="layui-elem-field layui-field-title" style="margin-top: 20px;">
        <legend>消息列表</legend>
    </fieldset>

    <div class="layui-collapse" style="padding:20px" id="notread">
        <fieldset class="layui-elem-field layui-field-title" style="margin-top: 20px;">
            <legend>未读列表</legend>
        </fieldset>
        <div class="layui-colla-item">
            <h2 class="layui-colla-title">为什么JS社区大量采用未发布或者未广泛支持的语言特性？</h2>
            <p style="display:none">2222222</p>
            <div class="layui-colla-content">
                <p>有不少其他答案说是因为JS太差。我下面的答案已经说了，这不是根本性的原因。但除此之外，我还要纠正一些对JS具体问题的误解。JS当初是被作为脚本语言设计的，所以某些问题并不是JS设计得差或者是JS设计者的失误。比如var的作用域问题，并不是“错误”，而是当时绝大部分脚本语言都是这样的，如perl/php/sh等。模块的问题也是，脚本语言几乎都没有模块/命名空间功能。弱类型、for-in之类的问题也是，只不过现在用那些老的脚本语言的人比较少，所以很多人都误以为是JS才有的坑。另外有人说JS是半残语言，满足不了开发需求，1999年就该死。半残这个嘛，就夸张了。JS虽然有很多问题，但是设计总体还是优秀的。——来自知乎@贺师俊</p>
            </div>
        </div>
        <div class="layui-colla-item">
            <h2 class="layui-colla-title">为什么前端工程师多不愿意用 Bootstrap 框架？</h2>
            <div class="layui-colla-content">
                <p>因为不适合。如果希望开发长期的项目或者制作产品类网站，那么就需要实现特定的设计，为了在维护项目中可以方便地按设计师要求快速修改样式，肯定会逐步编写出各种业务组件、工具类，相当于为项目自行开发一套框架。——来自知乎@Kayo</p>
            </div>
        </div>
    </div>

    <div class="layui-collapse" style="padding:20px">
        <fieldset class="layui-elem-field layui-field-title" style="margin-top: 20px;">
            <legend>已读列表</legend>
        </fieldset>
        <div class="layui-colla-item">
            <h2 class="layui-colla-title">为什么JS社区大量采用未发布或者未广泛支持的语言特性？</h2>
            <div class="layui-colla-content">
                <p>有不少其他答案说是因为JS太差。我下面的答案已经说了，这不是根本性的原因。但除此之外，我还要纠正一些对JS具体问题的误解。JS当初是被作为脚本语言设计的，所以某些问题并不是JS设计得差或者是JS设计者的失误。比如var的作用域问题，并不是“错误”，而是当时绝大部分脚本语言都是这样的，如perl/php/sh等。模块的问题也是，脚本语言几乎都没有模块/命名空间功能。弱类型、for-in之类的问题也是，只不过现在用那些老的脚本语言的人比较少，所以很多人都误以为是JS才有的坑。另外有人说JS是半残语言，满足不了开发需求，1999年就该死。半残这个嘛，就夸张了。JS虽然有很多问题，但是设计总体还是优秀的。——来自知乎@贺师俊</p>
            </div>
        </div>
        <div class="layui-colla-item">
            <h2 class="layui-colla-title">为什么前端工程师多不愿意用 Bootstrap 框架？</h2>
            <div class="layui-colla-content">
                <p>因为不适合。如果希望开发长期的项目或者制作产品类网站，那么就需要实现特定的设计，为了在维护项目中可以方便地按设计师要求快速修改样式，肯定会逐步编写出各种业务组件、工具类，相当于为项目自行开发一套框架。——来自知乎@Kayo</p>
            </div>
        </div>
    </div>

    @Scripts.Render("~/ListInfo_Js")
    <script>
        layui.use(['element', 'layer'], function () {
            var element = layui.element;
            var layer = layui.layer;

            $("#notread .layui-colla-title").click(function () {
                var readinfo = $(this).next();
                var readId = readinfo.text();
                if (readId == 0) return;
                //ajaxq请求
                $.ajax({
                    url: "/Notice/NoticeConfirm",
                    data: { "noticeId": readId },
                    method: "Post",
                    type: "Json",
                    success: function (result) {
                        readinfo.text("0");     //重置标签为0
                    }
                });
            });

            ////监听折叠
            //element.on('collapse(notread)', function (data) {
            //    console.log(data);

            //    //$.ajax({
            //    //    url: "/Message/MessageConfirm?", success: function (result) {
            //    //        $("#div1").html(result);
            //    //    }
            //    //});
            //});
        });
    </script>
</body>
</html>
